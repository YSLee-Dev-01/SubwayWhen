//
//  TabbarVC.swift
//  SubwayWhen
//
//  Created by Ïù¥Ïú§Ïàò on 2022/11/28.
//

import UIKit

import Then
import SnapKit

class TabbarVC : UITabBarController{
    let tabbarModel = TabbarModel()
    
    let mainVC = MainVC().then{
        $0.tabBarItem = UITabBarItem(title: nil, image: UIImage(systemName: "house"), tag: 0)
    }
    
    let searchVC = SearchVC(nibName: nil, bundle: nil).then{
        $0.tabBarItem = UITabBarItem(title: nil, image: UIImage(systemName: "magnifyingglass"), tag: 1)
    }
    
    let settingVC = SettingVC(title: "ÏÑ§Ï†ï", titleViewHeight: 30).then{
        $0.tabBarItem = UITabBarItem(title: nil, image: UIImage(systemName: "gearshape"), tag: 2)
    }
    
    override func viewDidLoad() {
        self.attribute()
        self.viewLoad()
    }
}


extension TabbarVC{
    private func attribute(){
        self.tabBar.backgroundColor = .systemBackground
        self.viewControllers = [UINavigationController(rootViewController: self.mainVC),
                                UINavigationController(rootViewController: self.searchVC),
                                UINavigationController(rootViewController: self.settingVC)
        ]
        
        self.tabBar.itemWidth = 50.0
        self.tabBar.itemPositioning = .centered
    }
    
    private func viewLoad(){
        // ÏÑ§Ï†ï Î°úÎìú
        let result = self.tabbarModel.saveSettingLoad()
        
        switch result{
        case .success():
            print("setting load success")
        case .failure(let error):
            FixInfo.saveSetting = SaveSetting(mainCongestionLabel: "üòµ", mainGroupOneTime: 0, mainGroupTwoTime: 0, detailAutoReload: true)
            print("setting not load, Ï¥àÍ∏∞ Í∞í ÏÑ∏ÌåÖ ÏôÑÎ£å\n", error)
        }
        
        // Î≤ÑÏ†Ñ ÌôïÏù∏
        self.tabbarModel.versionRequest{[weak self] version in
            let nowVersion = Bundle.main.infoDictionary?["CFBundleShortVersionString"] as! String
            
            if nowVersion <= version{
                self?.updateAlertShow()
            }
        }
        
        // ÌåùÏóÖ Î°úÎìú
        self.tabbarModel.popupRequest{[weak self] title, subTitle, contents in
            if title != "Nil"{
                let popup = PopupModal(modalHeight: 400, popupTitle: title, subTitle: subTitle, popupValue: contents)
                popup.modalPresentationStyle = .overFullScreen
                self?.present(popup, animated: false)
            }
        }
    }
    
    private func updateAlertShow(){
        let alert = UIAlertController(title: "Î≤ÑÏ†Ñ ÏóÖÎç∞Ïù¥Ìä∏ ÏïàÎÇ¥", message: "ÏÉàÎ°úÏö¥ Î≤ÑÏ†ÑÏúºÎ°ú ÏóÖÎç∞Ïù¥Ìä∏ ÌõÑ Ïï±ÏùÑ Ïù¥Ïö©Ìï¥Ï£ºÏÑ∏Ïöî.", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "ÌôïÏù∏", style: .default){_ in
            print("ÎàåÎ¶º")
        })
        self.present(alert, animated: true)
    }
}
